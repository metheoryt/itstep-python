"""
Создание и вызов функций
"""


# функция определяется через ключевое слово def
# a и b - аргументы функции
def multiply(a, b):
    return a * b  # возвращаемое функцией значение


# функция возвращает значение
assert multiply(2, 3) == 6

# это значение можно присвоить переменной
result = multiply(4, 4)
assert result == 16

# или сразу передать в качестве аргумента другой функции (не лучшая практика)
result = multiply(2, multiply(3, 3))
assert result == 18


# аргументам могут быть назначены значения по умолчанию
def greet(name='гость'):
    return f'привет, {name}!'


# при вызове такой функции такие аргументы можно не указывать, в переменную аргумента подставится значение по умолчанию
assert greet() == 'привет, гость!'
assert greet('вася') == 'привет, вася!'
assert greet(name='вася') == 'привет, вася!'


# FIXME подводный камень!
# если аргументу указать в качестве значения по умолчанию изменяемый объект,
# функция будет работать именно с этим объектом при каждом вызове без переопределения этого аргумента.
# это плохая практика.
def add_or_make_list(value, the_list=[]):
    the_list.append(value)
    return the_list


l1 = add_or_make_list('spam')
assert l1 == ['spam']

l2 = add_or_make_list('egg')
assert l2 == ['spam', 'egg']  # вот в какую путаницу это выливается
